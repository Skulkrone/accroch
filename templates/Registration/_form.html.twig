<section id="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-6 col-sm-offset-4 col-md-6 col-md-offset-3">
                <div class="page-login-form box">
                    <h3>
                        Inscription
                    </h3>
                    <form name="user" method="post" id="upload-form" enctype="multipart/form-data">
                        <div class="form-group is-empty"><label for="user_Name" class="form-control-label required">Nom</label><input type="text" id="user_Name" name="user[Name]" required="required" class="form-control"><span class="material-input"></span></div>
                        <div class="form-group is-empty"><label for="user_firstName" class="form-control-label required">Prénom</label><input type="text" id="user_firstName" name="user[firstName]" required="required" class="form-control"><span class="material-input"></span></div>
                        <div class="form-group is-empty"><label for="user_username" class="form-control-label required">Login</label><input type="text" id="user_username" name="user[username]" required="required" class="form-control"><span class="material-input"></span></div>
                        <div class="form-group is-empty"><label for="user_address" class="form-control-label required">Adresse</label><input type="text" id="user_address" name="user[address]" required="required" class="form-control"><span class="material-input"></span></div>
                        <div style="display: none;">
                            <select id="countrySelect" name="country">
                                <option value="FR"> France</option>
                            </select>
                        </div>
                        <div class="form-group is-empty"><label for="user_postalCode" class="form-control-label required">Code Postal</label><input type="text" id="user_postalCode" name="user[postalCode]" required="required" onblur="postalCodeLookup();" class="form-control"><span class="material-input"></span></div>
                        <div class="form-group is-empty"><label for="user_city" class="form-control-label required">Ville</label><input type="text" id="user_city" name="user[city]" required="required" onblur="closeSuggestBox();" class="form-control"><span class="material-input"></span></div>
                        <span style="z-index:25;visibility: hidden;" id="suggestBoxElement"></span>
                        <div class="form-group is-empty"><label for="user_email" class="form-control-label required">Email</label><input type="email" id="user_email" name="user[email]" required="required" class="form-control"><span class="material-input"></span></div>
                        <div class="form-group is-empty"><label for="user_phone" class="form-control-label required">Téléphone</label><input type="text" id="user_phone" name="user[phone]" required="required" class="form-control"><span class="material-input"></span></div>
                        <div class="form-group is-empty"><label for="user_password_first" class="form-control-label required">Mot de passe</label><input type="password" id="user_password_first" name="user[password][first]" required="required" class="form-control"><span class="material-input"></span></div>
                        <div class="form-group is-empty"><label for="user_password_second" class="form-control-label required">Répéter Mot de passe</label><input type="password" id="user_password_second" name="user[password][second]" required="required" class="form-control"><span class="material-input"></span></div>
                        <div class="form-group">
                            <div class="custom-file">
                                <label for="user_avatar" class="custom-file-label">Avatar</label>
                                <input type="file" id="user_avatar" name="user[avatar]" class="custom-file-input"><br/>
                            </div>
                        </div>

                        <fieldset class="form-group"><legend class="col-form-label">vous êtes : </legend><div id="user_typeRoles"><div class="form-check">       
                                    <input type="radio" id="user_typeRoles_0" name="user[typeRoles]" class="form-check-input" value="2">
                                    <label class="form-check-label" for="user_typeRoles_0">Utilisateur</label></div><div class="form-check">        <input type="radio" id="user_typeRoles_1" name="user[typeRoles]" class="form-check-input" value="3">
                                    <label class="form-check-label" for="user_typeRoles_1">Annonceur</label></div></div></fieldset>
                        <div class="form-group"><div class="form-check">        <input type="checkbox" id="user_termsAccepted" name="user[termsAccepted]" required="required" class="form-check-input" value="1">
                                <label class="form-check-label required" for="user_termsAccepted">En créant votre compte, vous acceptez l'intégralité de nos 
                                    Conditions générales de vente et d'utilisation.</label></div></div>
                        <!--<input type="submit" name="upload" class="btn" value="S'inscrire !">-->
                        <button type="submit" class="btn btn-common log-btn">S'inscrire !</button>
                        <input type="hidden" id="user__token" name="user[_token]" value="HuGtCNL1w-EO7lI418YMVtcQXu7LLyO0MHz50pVhky8">
                    </form>
                    <p style="color: #000;font-weight: 700;">Informations sur le traitement de vos données personnelles : Pour connaitre et exercer vos droits, notamment de retrait de votre consentement à l'utilisation des données collectées par ce formulaire, veuillez consulter nos <a href="{{ path('mentions_legales') }}">Mentions Légales</a>.</p>
                </div>
            </div>
        </div>
    </div>
</section>

<script type="text/javascript" src="http://api.geonames.org/export/geonamesData.js?username=skulkrone"></script>
<script type="text/javascript" src="{{ asset('assets/js/jsr_class.js')}}"></script>
<script type="text/javascript" >
    // postalcodes is filled by the JSON callback and used by the mouse event handlers of the suggest box
    var postalcodes;

    // this function will be called by our JSON callback
    // the parameter jData will contain an array with postalcode objects
    function getLocation(jData) {
        if (jData === null) {
            // There was a problem parsing search results
            return;
        }

        // save place array in 'postalcodes' to make it accessible from mouse event handlers
        postalcodes = jData.postalcodes;

        if (postalcodes.length > 1) {
            // we got several places for the postalcode
            // make suggest box visible
            document.getElementById('suggestBoxElement').style.visibility = 'visible';
            var suggestBoxHTML = '';
            // iterate over places and build suggest box content
            for (i = 0; i < jData.postalcodes.length; i++) {
                // for every postalcode record we create a html div 
                // each div gets an id using the array index for later retrieval 
                // define mouse event handlers to highlight places on mouseover
                // and to select a place on click
                // all events receive the postalcode array index as input parameter
                suggestBoxHTML += "<div class='suggestions' id=pcId" + i + " onmousedown='suggestBoxMouseDown(" + i + ")' onmouseover='suggestBoxMouseOver(" + i + ")' onmouseout='suggestBoxMouseOut(" + i + ")'> " + postalcodes[i].countryCode + ' ' + postalcodes[i].postalcode + '    ' + postalcodes[i].placeName + '</div>';
            }
            // display suggest box
            document.getElementById('suggestBoxElement').innerHTML = suggestBoxHTML;
        } else {
            if (postalcodes.length === 1) {
                // exactly one place for postalcode
                // directly fill the form, no suggest box required 
                var placeInput = document.getElementById("user_city");
                placeInput.value = postalcodes[0].placeName;
            }
            closeSuggestBox();
        }
    }


    function closeSuggestBox() {
        document.getElementById('suggestBoxElement').innerHTML = '';
        document.getElementById('suggestBoxElement').style.visibility = 'hidden';
    }


    // remove highlight on mouse out event
    function suggestBoxMouseOut(obj) {
        document.getElementById('pcId' + obj).className = 'suggestions';
    }

    // the user has selected a place name from the suggest box
    function suggestBoxMouseDown(obj) {
        closeSuggestBox();
        var placeInput = document.getElementById("user_city");
        placeInput.value = postalcodes[obj].placeName;
    }

    // function to highlight places on mouse over event
    function suggestBoxMouseOver(obj) {
        document.getElementById('pcId' + obj).className = 'suggestionMouseOver';
    }


    // this function is called when the user leaves the postal code input field
    // it call the geonames.org JSON webservice to fetch an array of places 
    // for the given postal code 
    function postalCodeLookup() {

        var country = document.getElementById("countrySelect").value;

        if (geonamesPostalCodeCountries.toString().search(country) == -1) {
            return; // selected country not supported by geonames
        }
        // display 'loading' in suggest box
        document.getElementById('suggestBoxElement').style.visibility = 'visible';
        document.getElementById('suggestBoxElement').innerHTML = '<small><i>loading ...</i></small>';

        var postalcode = document.getElementById("user_postalCode").value;

        request = 'http://api.geonames.org/postalCodeLookupJSON?postalcode=' + postalcode + '&country=' + country + '&callback=getLocation&username=skulkrone';

        // Create a new script object
        aObj = new JSONscriptRequest(request);
        // Build the script tag
        aObj.buildScriptTag();
        // Execute (add) the script tag
        aObj.addScriptTag();
    }

    // set the country of the user's ip (included in geonamesData.js) as selected country 
    // in the country select box of the address form
    function setDefaultCountry() {
        var countrySelect = document.getElementById("countrySelect");
        for (i = 0; i < countrySelect.length; i++) {
            // the javascript geonamesData.js contains the countrycode
            // of the userIp in the variable 'geonamesUserIpCountryCode'
            if (countrySelect[i].value === geonamesUserIpCountryCode) {
                // set the country selectionfield
                countrySelect.selectedIndex = i;
            }
        }
    }
</script>






